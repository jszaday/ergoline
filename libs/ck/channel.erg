package ck;

import ergoline::queue;

class channel<A> {
    private val values: queue<A>;
    private val pending: queue<future<A>>;

    @entry def self() {
        values = new queue<A>();
        pending = new queue<future<A>>();
    }

    @entry def send(a: A) {
        if (pending.isEmpty()) {
            values.append(a);
        } else {
            pending.head().set(a);
            pending.removeHead();
        }
    }

    @entry def receive(f: future<A>) {
        if (values.isEmpty()) {
            pending.append(f);
        } else {
            f.set(values.head());
            values.removeHead();
        }
    }
}
