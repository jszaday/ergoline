package ergoline;

@system struct int {
    @system(operator=true,reducer="CkReduction::sum_int")
    def +(other: int): int;

    @system(operator=true) def -(other: int): int;
    @system(operator=true) def *(other: int): int;
    @system(operator=true) def /(other: int): int;
    @system(operator=true) def %(other: int): int;

    @system(operator=true,alias="-")
    def <=>(other: int): int;

    @system(operator=true) def unary_+(): int;
    @system(operator=true) def unary_-(): int;

    @system(operator=true) def unary_~(): int;
    @system(operator=true) def ^(other: int): int;
    @system(operator=true) def |(other: int): int;
    @system(operator=true) def &(other: int): int;
    @system(operator=true) def <<(other: int): int;
    @system(operator=true) def >>(other: int): int;

    def to(end: int): range<int> {
        return new range<int>(self, 1, end);
    }

    @system(cast=true) def toBool(): bool;
    @system(cast=true) def toLong(): long;
    @system(cast=true) def toShort(): short;
    @system(cast=true) def toDouble(): double;

    @system(alias="std::to_string",static=true)
    def toString(): string;
}
