package ergoline;

@system struct short {
    @system(operator, reducer="CkReduction::sum_short")
    def +(other: short): short;

    @system(operator) def -(other: short): short;
    @system(operator) def *(other: short): short;
    @system(operator) def /(other: short): short;
    @system(operator) def %(other: short): short;
    @system(operator) def %(other: int): int;

    @system(operator, alias="-")
    def <=>(other: short): short;

    @system(operator) def unary_+(): short;
    @system(operator) def unary_-(): short;

    @system(operator) def unary_~(): short;
    @system(operator) def ^(other: short): short;
    @system(operator) def |(other: short): short;
    @system(operator) def &(other: short): short;
    @system(operator) def <<(other: short): short;
    @system(operator) def >>(other: short): short;

    @system(cast) def toInt(): int;
    @system(cast) def toBool(): bool;
    @system(cast) def toLong(): long;
    @system(cast) def toDouble(): double;

    @system(static, alias="std::to_string")
    def toString(): string;
}
