package examples;

import ergoline::_;
import ck;

@main class puptest {
    val selfProxy: puptest@;
    
    @entry def puptest(=selfProxy: puptest@) {
        val n = ck::numPes() * 4;
        val a = new array<int>(n);
        for (var i = 0; i < n; i += 1) {
            a[i] = 2 * i + 1;
        }
        receive((a, new test(true)));
    }

    @entry def receive(at: (array<int>, test)) {
        val a = at[0];
        val t = at[1];
        for (var i = 0; i < a.size(); i += 1) {
            println("a[" + i.toString() + "] = " + a[i].toString());
        }
        println("t.b = " + t.b.toString());
        exit();
    }
}

class test {
    val b: bool;
    def test(=b: bool) { }
}