package examples;

import ergoline::_;
import ck;

@main class main {
    val msg: string = "hi";

    @entry(chare) def self(args: array<string>) {
        val n = (args.size() > 1) ? args[1].toInt() : 16;
        val ts = new ck::tspace<int, string>(n);
        val arrProxy = new hello1d@array1d(n, ts);

        ts.put((0, msg));
        ts[n].then(self@done);
    }

    @entry(chare) def done(t: (int, string)) {
        assert(msg == t[1]);
        println("main> all done!");
        exit();
    }
}

class hello1d {
    val ts: ck::tspace<int, string>;

    @entry(array1d) def self(=ts: ck::tspace<int, string>) {
        val i = self[@]index();
        ts[i].then(self[@]forward);
    }

    @entry(array1d) def forward(t: (int, string)) {
        val (i, msg) = t;
        println(`${i}> saying '${msg}' to ${i + 1}~!`);
        ts.put((i + 1, msg));
    }
}
