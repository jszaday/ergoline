package examples;

import ergoline::_;

@main class activator {
    var count: int = 0;

    @entry def activator() {
        self@activate(new duck());
        self@activate(new lion());
    }

    @entry def activate(a: animal): unit {
        match (a) {
            case d: duck => makeSound(d);
            case l: lion => makeSound(l);
        }

        val id = typeid(a);
        println(`hey> a(n) ${id.name()} has ${a.numLegs()} legs!`);

        count += 1;
        if (count >= 2) {
            exit();
        }
    }
}

def makeSound<A>(a: A) where A == lion {
    println("hey> a lion roars!");
}

def makeSound<A>(a: A) where A == duck {
    println("hey> a duck quacks!");
}

class lion with animal {
    def lion(): unit {}

    override def numLegs(): int {
        return 4;
    }
}

class duck with animal {
    def duck(): unit {}

    override def numLegs(): int {
        return 2;
    }
}

trait animal {
    def numLegs(): int;
}
