package examples;

import ergoline::_;

@main class itercheck {
    @entry def self() {
        val n = 16;
        val a = new array<int>(n);
        val b = new array<int>(n);

        for (var i = 0; i < n; i += 1) {
            a[i] = (2 * i) + 1;
            b[i] = 2 * (i + 1);
        }

        val azb = a.iter().zip(b.iter());
        val azbs =
          azb
            .map((ab: (int, int)) => {
                return ab[0] + ab[1];
            });

        println("a(n) = 4*n + 3");
        for ( (a, b) <- (0 to n) zip azbs ) {
            println(`a(${a}) = ${b}`);
        }

        self@checkSlicing();
    }

    @entry def checkSlicing() {
        val m = 4;
        val n = m;

        val a = new array<int, 2>(m, n);

        println("contents of matrix:");
        for ( i <- 0 to m ) {
            for ( j <- 0 to n ) {
                val x = i * n + j;
                a[i, j] = x;
                print(`${x}\t`);
            }

            print("\n");
        }

        println("contents of third row:");
        for ( x <- a[2, :] ) {
            print(`${x}\t`);
        }

        println("\ncontents of third column:");
        for ( x <- a[:, 2] ) {
            print(`${x}\t`);
        }

        a[2, :] = a[:, 2];
        a[:, 2] = 0;
        a[2, 2] = 2 * n + 2;

        println("\ncontents of matrix after moving the third column to the third row:");
        for ( i <- 0 to m ) {
            for ( j <- 0 to n ) {
                print(`${a[i, j]}\t`);
            }

            print("\n");
        }

        exit();
    }
}
